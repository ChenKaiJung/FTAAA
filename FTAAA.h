//
// C++ Interface: libFTDAM
//
// Description: Library of commonly stands for Funtown's Authentication, Authorization and Accounting"
//
//
// Author: kaijung.chen <kaijung.chen@gigamedia.com.tw>, (C) 2010
//
// Copyright: See COPYING file that comes with this distribution
//
//


#ifndef _FTAAA_H
#define _FTAAA_H

#ifdef _WIN32
	#ifdef FTAAA_EXPORTS
	#define AAA_API  __declspec(dllexport)   // export DLL information
	#else
	#define AAA_API  __declspec(dllimport)   // import DLL information
	#endif 
	
	#if !defined(_MT) && !defined(__MT__)
	#  error You must link against multi-threaded libraries
	# endif 
#else 
	#define AAA_API
#endif
/// \brief defines the service account string length
#ifndef SERVICE_ACCOUNT_LENGTH
	#define SERVICE_ACCOUNT_LENGTH 129
#endif

/// \brief defines the IP string length
#ifndef IP_LENGTH 
	#define IP_LENGTH 16
#endif 

/// \brief defines the mac string length
#ifndef MAC_LENGTH 
	#define MAC_LENGTH 1025
#endif

/// \brief defines the cipher text string length
#ifndef CIPHERTEXT_LENGTH
	#define CIPHERTEXT_LENGTH 1025
#endif
/// \brief defines the use profile string length
#ifndef USER_PROFILE_LENGTH
	#define USER_PROFILE_LENGTH 1025
#endif

/// \brief defines the authorization code secret length
#ifndef OAUTH_CODE_LENGTH
	#define OAUTH_CODE_LENGTH 1025
#endif

/// \brief defines the token length
#ifndef OAUTH_TOKEN_LENGTH
	#define OAUTH_TOKEN_LENGTH 1025
#endif
/// \brief defines the redirection URI length
#ifndef OAUTH_REDIRECT_URI_LENGTH
	#define OAUTH_REDIRECT_URI_LENGTH 2001
#endif

/// \brief defines the error length
#ifndef OAUTH_ERROR_LENGTH
	#define OAUTH_ERROR_LENGTH 32
#endif

/// \brief defines the error length
#ifndef OAUTH_PROVIDER_LENGTH
#define OAUTH_PROVIDER_LENGTH 21
#endif

#ifndef REQUEST_OAUTH_TOKEN_REQ
#define REQUEST_OAUTH_TOKEN_REQ
    /// \brief OAuth 2.0 grant_type=authorization_code request, http://tools.ietf.org/html/draft-ietf-oauth-v2-13#section-4.1.3
	typedef struct RequestOAuthTokenReq_t
	{
		char IP[IP_LENGTH];	///< \. IP address of login client.
		char OAUTH_CODE[OAUTH_TOKEN_LENGTH]; ///< \. OAuth authorization code generated by OAuth Server. 
		char OAUTH_REDIRECT_URI[OAUTH_REDIRECT_URI_LENGTH]; /// \. OAuth Server verify redirection URI matches the URI that delived the authorization code
		int  XOAUTH_ACCESS_TOKEN_EXPIRE_IN; ///< \. Indicates the expire time of access token will be extended in seconds (1 - 3600).
		int  XOAUTH_REFRESH_TOKEN_EXPIRE_IN; ///< \. Indicates the expire time of refresh token will be extended in seconds (3600 -).
        char OAUTH_PROVIDER[OAUTH_PROVIDER_LENGTH]; ///< \. OAuth service provider, for example funtown, facebook 
	}RequestOAuthTokenReq;
#endif 

#ifndef REQUEST_OAUTH_TOKEN_RESULT
#define REQUEST_OAUTH_TOKEN_RESULT
    /// \brief OAuth 2.0 grant_type=authorization_code response, http://tools.ietf.org/html/draft-ietf-oauth-v2-13#section-4.1.4
	typedef struct RequestOAuthTokenResult_t
	{
		int  ERROR_CODE; ///< \. Error codes,  if request sussesfuly, the  result is 100
		char OAUTH_ERROR[OAUTH_ERROR_LENGTH]; ///< \. OAuth error Response.
		char OAUTH_ACCESS_TOKEN[OAUTH_TOKEN_LENGTH]; ///< \. OAuth access token issued for short-lived authorizations.
		char OAUTH_REFRESH_TOKEN[OAUTH_TOKEN_LENGTH]; ///< \. OAuth refresh token issued for Long-lived authorizations.
		int  XOAUTH_ACCESS_TOKEN_EXPIRE_TIME_STAMP; ///< \. Indicates the real expire time of access token using unix time stamp.
		int  XOAUTH_REFRESH_TOKEN_EXPIRE_TIME_STAMP; ///< \. Indicates the real expire time of Refresh token using unix time stamp.     
	}RequestOAuthTokenResult;
#endif 

#ifndef REFRESH_OAUTH_TOKEN_REQ
#define REFRESH_OAUTH_TOKEN_REQ
    /// \brief OAuth 2.0 grant_type=refresh_token request, http://tools.ietf.org/html/draft-ietf-oauth-v2-13#section-6
	typedef struct RefreshOAuthTokenReq_t
	{
		char IP[IP_LENGTH];	///< \. IP address of login client.
		char OAUTH_REFRESH_TOKEN[OAUTH_TOKEN_LENGTH]; ///< \. OAuth Refresh token issued for Long-lived authorizations.
		int  XOAUTH_ACCESS_TOKEN_EXPIRE_IN; ///< \. Indicates the expire time of access token will be extended in seconds (1 - 3600).
		int  XOAUTH_REFRESH_TOKEN_EXPIRE_IN; ///< \. Indicates the expire time of Refresh token will be extended in seconds (3600 -).
        char OAUTH_PROVIDER[OAUTH_PROVIDER_LENGTH]; ///< \. OAuth service provider, for example funtown, facebook         
	}RefreshOAuthTokenReq;
#endif 

#ifndef REFRESH_OAUTH_TOKEN_RESULT
#define REFRESH_OAUTH_TOKEN_RESULT
    /// \brief OAuth 2.0 grant_type=refresh_token response, http://tools.ietf.org/html/draft-ietf-oauth-v2-13#section-5.1
	typedef struct RefreshOAuthTokenResult_t
	{
		int  ERROR_CODE; ///< \. Error codes,  if refresh sussesfuly, the  result is 100
		char OAUTH_ERROR[OAUTH_ERROR_LENGTH]; ///< \. OAuth error response.
		char OAUTH_ACCESS_TOKEN[OAUTH_TOKEN_LENGTH]; ///< \. OAuth access token issued for short-lived authorizations.
		char OAUTH_REFRESH_TOKEN[OAUTH_TOKEN_LENGTH]; ///< \. OAuth Refresh token issued for Long-lived authorizations.
		int  XOAUTH_ACCESS_TOKEN_EXPIRE_TIME_STAMP; ///< \. Indicates the real expire time of access token using unix time stamp.
		int  XOAUTH_REFRESH_TOKEN_EXPIRE_TIME_STAMP; ///< \. Indicates the real expire time of Refresh token using unix time stamp.
	}RefreshOAuthTokenResult;
#endif 

#ifndef GET_USER_PROFILE_REQ
#define GET_USER_PROFILE_REQ
    /// \brief get the user's profile request.
	typedef struct GetUserProfileReq_t
	{
		char IP[IP_LENGTH];	///< \. IP address of login client.
		char OAUTH_ACCESS_TOKEN[OAUTH_TOKEN_LENGTH]; ///< \. OAuth access token. 
    char OAUTH_PROVIDER[OAUTH_PROVIDER_LENGTH]; ///< \. OAuth service provider, for example funtown, facebook 
	}GetUserProfileReq;	
#endif 

#ifndef GET_USER_PROFILE_RESULT
#define GET_USER_PROFILE_RESULT
    /// \brief get the user's profile result.
	typedef struct GetUserProfileResult_t
	{
		int  ERROR_CODE; ///< \. Error codes,  if confirm sussesfuly, the  result is 100
		int	 SERVICE_ACCOUNT_SQ; ///< \. Service account's unique sequnce number 32 bits. 
		char OAUTH_ERROR[OAUTH_ERROR_LENGTH]; ///< \. OAuth error response.
		char USER_PROFILE[USER_PROFILE_LENGTH]; ///< \. All information about user. The format is json     
	}GetUserProfileResult;
#endif

#ifndef QUERY_GAME_POINTS_REQ
#define QUERY_GAME_POINTS_REQ
    /// \brief Query game points request
	typedef struct QueryGamePointsReq_t
	{
		char IP[IP_LENGTH];	///< \. IP address of login client.
		char OAUTH_ACCESS_TOKEN[OAUTH_TOKEN_LENGTH]; ///< \. OAuth access token. 
    char OAUTH_PROVIDER[OAUTH_PROVIDER_LENGTH]; ///< \. OAuth service provider, for example funtown, facebook        
	}QueryGamePointsReq;	
#endif 

#ifndef QUERY_GAME_POINTS_RESULT
#define QUERY_GAME_POINTS_RESULT
    /// \brief Query game points request
	typedef struct QueryGamePointsResult_t
	{
		int  ERROR_CODE; ///< \. Error codes,  if confirm sussesfuly, the  result is 100 
		char OAUTH_ERROR[OAUTH_ERROR_LENGTH]; ///< \. OAuth error response.
		int	 SERVICE_ACCOUNT_SQ; ///< \. Service account's unique sequnce number 32 bits.
		int	 TOTAL_GAME_BALANCE; ///< \. Total game balance of this service account sequnce number.   
	}QueryGamePointsResult;
#endif

#ifndef DEDUCT_GAME_POINTS_REQ
#define DEDUCT_GAME_POINTS_REQ
    /// \brief Deduct game points request
	typedef struct DeductGamePointsReq_t
	{
		char IP[IP_LENGTH];	///< \. IP address of login client.
		int  ITEM_CODE; ///< \. Item code number.  
		int  ITEM_PRICE;  ///< \. Item price.
		char OAUTH_ACCESS_TOKEN[OAUTH_TOKEN_LENGTH]; ///< \. OAuth access token. 
    char OAUTH_PROVIDER[OAUTH_PROVIDER_LENGTH]; ///< \. OAuth service provider, for example funtown, facebook        
	}DeductGamePointsReq;	
#endif 

#ifndef DEDUCT_GAME_POINTS_RESULT
#define DEDUCT_GAME_POINTS_RESULT
    /// \brief Deduct game points result
	typedef struct DeductGamePointsResult_t
	{
		int  ERROR_CODE; ///< \. Error codes,  if confirm sussesfuly, the  result is 100 
		char OAUTH_ERROR[OAUTH_ERROR_LENGTH]; ///< \. OAuth error response.
		int	 SERVICE_ACCOUNT_SQ; ///< \. Service account's unique sequnce number 32 bits.
		int  DEDUCT_FREE_POINTS; ///< \. How many free points has been deducted.
		int  DEDUCT_POINTS; ///< \. How many points has been deducted.
		int	 TOTAL_GAME_BALANCE; ///< \. Total game points of this service account sequnce number.
		int  TRANSACTION_SQ; ///< \. Unique transaction sequnce number.
		char MAC[MAC_LENGTH]; ///< \. Message Authentication Code.
	}DeductGamePointsResult;
#endif


#ifndef CANCEL_GAME_POINTS_DEDUCTION_REQ
#define CANCEL_GAME_POINTS_DEDUCTION_REQ
    /// \brief Cancel game points deduction request
	typedef struct CancelGamePointsDeductionReq_t
	{
		char IP[IP_LENGTH];	///< \. IP address of login client.
		int  TRANSACTION_SQ; ///< \. Unique transaction sequnce number.
		char MAC[MAC_LENGTH]; ///< \. Message Authentication Code.
		char OAUTH_ACCESS_TOKEN[OAUTH_TOKEN_LENGTH]; ///< \. OAuth access token. 
    char OAUTH_PROVIDER[OAUTH_PROVIDER_LENGTH]; ///< \. OAuth service provider, for example funtown, facebook        
	}CancelGamePointsDeductionReq;	
#endif 

#ifndef CANCEL_GAME_POINTS_DEDUCTION_RESULT
#define CANCEL_GAME_POINTS_DEDUCTION_RESULT
    /// \brief Cancel game points deduction result
	typedef struct CancelGamePointsDeductionResult_t
	{
		int  ERROR_CODE; ///< \. Error codes,  if confirm sussesfuly, the  result is 100 
		char OAUTH_ERROR[OAUTH_ERROR_LENGTH]; ///< \. OAuth error response.
		int	 SERVICE_ACCOUNT_SQ; ///< \. Service account's unique sequnce number 32 bits.
		int  CANCEL_FREE_POINTS; ///< \. How many free points has been canceled.
		int  CANCEL_POINTS; ///< \. How many points has been canceled.
		int	 TOTAL_GAME_BALANCE; ///< \. Total game points of this service account sequnce number.
		int  TRANSACTION_SQ; ///< \. Unique transaction sequnce number.
		char MAC[MAC_LENGTH]; ///< \. Message Authentication Code.
	}CancelGamePointsDeductionResult;
#endif


#ifndef QUERY_BONUS_POINTS_REQ
#define QUERY_BONUS_POINTS_REQ
    /// \brief Query Bonus points request
	typedef struct QueryBonusPointsReq_t
	{
		char IP[IP_LENGTH];	///< \. IP address of login client.
		char OAUTH_ACCESS_TOKEN[OAUTH_TOKEN_LENGTH]; ///< \. OAuth access token. 
    char OAUTH_PROVIDER[OAUTH_PROVIDER_LENGTH]; ///< \. OAuth service provider, for example funtown, facebook        
	}QueryBonusPointsReq;	
#endif 

#ifndef QUERY_BONUS_POINTS_RESULT
#define QUERY_BONUS_POINTS_RESULT
    /// \brief Query Bonus points request
	typedef struct QueryBonusPointsResult_t
	{
		int  ERROR_CODE; ///< \. Error codes,  if confirm sussesfuly, the  result is 100 
		char OAUTH_ERROR[OAUTH_ERROR_LENGTH]; ///< \. OAuth error response.
		int	 SERVICE_ACCOUNT_SQ; ///< \. Service account's unique sequnce number 32 bits.
		int	 TOTAL_BONUS_BALANCE; ///< \. Total game balance of this service account sequnce number.
	}QueryBonusPointsResult;
#endif

#ifndef DEDUCT_BONUS_POINTS_REQ
#define DEDUCT_BONUS_POINTS_REQ
    /// \brief Deduct Bonus points result
	typedef struct DeductBonusPointsReq_t
	{
		char IP[IP_LENGTH];	///< \. IP address of login client.
		int  ITEM_CODE; ///< \. Item code number.  
		int  ITEM_PRICE;  ///< \. Item price.
		char OAUTH_ACCESS_TOKEN[OAUTH_TOKEN_LENGTH]; ///< \. OAuth access token. 
    char OAUTH_PROVIDER[OAUTH_PROVIDER_LENGTH]; ///< \. OAuth service provider, for example funtown, facebook        
	}DeductBonusPointsReq;
#endif 

#ifndef DEDUCT_BONUS_POINTS_RESULT
#define DEDUCT_BONUS_POINTS_RESULT
    /// \brief Query Bonus points request
	typedef struct DeductBonusPointsResult_t
	{
		int  ERROR_CODE; ///< \. Error codes,  if confirm sussesfuly, the  result is 100 
		char OAUTH_ERROR[OAUTH_ERROR_LENGTH]; ///< \. OAuth error response.
		int	 SERVICE_ACCOUNT_SQ; ///< \. Service account's unique sequnce number 32 bits.
		int  DEDUCT_POINTS; ///< \. How many points has been deducted.
		int	 TOTAL_BONUS_BALANCE; ///< \. Total game points of this service account sequnce number.
		int  TRANSACTION_SQ; ///< \. Unique transaction sequnce number.
		char MAC[MAC_LENGTH]; ///< \. Message Authentication Code.
	}DeductBonusPointsResult;
#endif


#ifndef CANCEL_BONUS_POINTS_DEDUCTION_REQ
#define CANCEL_BONUS_POINTS_DEDUCTION_REQ
    /// \brief Cancel Bonus points deduction request
	typedef struct CancelBonusPointsDeductionReq_t
	{
		char IP[IP_LENGTH];	///< \. IP address of login client.
		int  TRANSACTION_SQ; ///< \. Unique transaction sequnce number.
		char MAC[MAC_LENGTH]; ///< \. Message Authentication Code.
		char OAUTH_ACCESS_TOKEN[OAUTH_TOKEN_LENGTH]; ///< \. OAuth access token. 
        char OAUTH_PROVIDER[OAUTH_PROVIDER_LENGTH]; ///< \. OAuth service provider, for example funtown, facebook        
	}CancelBonusPointsDeductionReq;	
#endif 

#ifndef CANCEL_BONUS_POINTS_DEDUCTION_RESULT
#define CANCEL_BONUS_POINTS_DEDUCTION_RESULT
    /// \brief Cancel Bonus points deduction result
	typedef struct CancelBonusPointsDeductionResult_t
	{
		int  ERROR_CODE; ///< \. Error codes,  if confirm sussesfuly, the  result is 100 
		char OAUTH_ERROR[OAUTH_ERROR_LENGTH]; ///< \. OAuth error response.
		int	 SERVICE_ACCOUNT_SQ; ///< \. Service account's unique sequnce number 32 bits.
		int  CANCEL_POINTS; ///< \. How many points has been canceled.
		int	 TOTAL_BONUS_BALANCE; ///< \. Total game points of this service account sequnce number.
		int  TRANSACTION_SQ; ///< \. Unique transaction sequnce number.
		char MAC[MAC_LENGTH]; ///< \. Message Authentication Code.
	}CancelBonusPointsDeductionResult;
#endif


#ifndef DEPOSIT_BONUS_POINTS_REQ
#define DEPOSIT_BONUS_POINTS_REQ
    /// \brief Deduct Bonus points result
	typedef struct DepositBonusPointsReq_t
	{
		char IP[IP_LENGTH];	///< \. IP address of login client.
		int  POINTS; ///< \. How many points will deposit.
		char OAUTH_ACCESS_TOKEN[OAUTH_TOKEN_LENGTH]; ///< \. OAuth access token. 
    char OAUTH_PROVIDER[OAUTH_PROVIDER_LENGTH]; ///< \. OAuth service provider, for example funtown, facebook        
	}DepositBonusPointsReq;
#endif 

#ifndef DEPOSIT_BONUS_POINTS_RESULT
#define DEPOSIT_BONUS_POINTS_RESULT
    /// \brief Query Bonus points request
	typedef struct DepositBonusPointsResult_t
	{
		int  ERROR_CODE; ///< \. Error codes,  if confirm sussesfuly, the  result is 100 
		char OAUTH_ERROR[OAUTH_ERROR_LENGTH]; ///< \. OAuth error response.
		int	 SERVICE_ACCOUNT_SQ; ///< \. Service account's unique sequnce number 32 bits.
		int  DEPOSIT_POINTS; ///< \. How many points has been deposited.
		int	 TOTAL_BONUS_BALANCE; ///< \. Total game points of this service account sequnce number.
		int  TRANSACTION_SQ; ///< \. Unique transaction sequnce number.
		char MAC[MAC_LENGTH]; ///< \. Message Authentication Code.
	}DepositBonusPointsResult;
#endif

#ifndef CANCEL_BONUS_POINTS_DEPOSIT_REQ
#define CANCEL_BONUS_POINTS_DEPOSIT_REQ
    /// \brief Cancel Bonus points deposit request
	typedef struct CancelBonusPointsDepositReq_t
	{
		char IP[IP_LENGTH];	///< \. IP address of login client.
		int  TRANSACTION_SQ; ///< \. Unique transaction sequnce number.
		char MAC[MAC_LENGTH]; ///< \. Message Authentication Code.
		char OAUTH_ACCESS_TOKEN[OAUTH_TOKEN_LENGTH]; ///< \. OAuth access token. 
    char OAUTH_PROVIDER[OAUTH_PROVIDER_LENGTH]; ///< \. OAuth service provider, for example funtown, facebook        
	}CancelBonusPointsDepositReq;	
#endif 

#ifndef CANCEL_BONUS_POINTS_DEPOSIT_RESULT
#define CANCEL_BONUS_POINTS_DEPOSIT_RESULT
    /// \brief Cancel Bonus points deduction result
	typedef struct CancelBonusPointsDepositResult_t
	{
		int  ERROR_CODE; ///< \. Error codes,  if confirm sussesfuly, the  result is 100 
		char OAUTH_ERROR[OAUTH_ERROR_LENGTH]; ///< \. OAuth error response.
		int	 SERVICE_ACCOUNT_SQ; ///< \. Service account's unique sequnce number 32 bits.
		int  CANCEL_POINTS; ///< \. How many deposit points has been canceled.
		int	 TOTAL_BONUS_BALANCE; ///< \. Total game points of this service account sequnce number.
		int  TRANSACTION_SQ; ///< \. Unique transaction sequnce number.
		char MAC[MAC_LENGTH]; ///< \. Message Authentication Code.
	}CancelBonusPointsDepositResult;
#endif


extern "C" {
    /// \brief Initials the Funtown AAA module
    ///
    /// \param url	- Indicates where the AAA DLL, NULL if DLL in the local directory.
    /// \return	True if the module was initialed, false otherwise.	
	AAA_API bool FTAAAInit();
    /// \brief Synchronization request OAuth token, http://tools.ietf.org/html/draft-ietf-oauth-v2-13#section-4.1.3  
    ///
    /// \param RequestOAuthTokenReq	- Request OAuth token request.
    /// \param RequestOAuthTokenResult	- Request OAuth token result.
    /// \return	true if the code was currected, false otherwise.
	AAA_API bool RequestOAuthToken(const RequestOAuthTokenReq *req,RequestOAuthTokenResult *result);
    /// \brief Synchronization refresh OAuth token, http://tools.ietf.org/html/draft-ietf-oauth-v2-13#section-6 
    ///
    /// \param RefreshOAuthTokenReq	- Request OAuth token request.
    /// \param RefreshOAuthTokenResult	- Request OAuth token result.
    /// \return	true if the refresh token was currected, false otherwise.
	AAA_API bool RefreshOAuthToken(const RefreshOAuthTokenReq *req,RefreshOAuthTokenResult *result);
    /// \brief Synchronization Get User's Profile using OAuth access token  
    ///
    /// \param GetUserProfileReq	- Get User's Profile request.
    /// \param GetUserProfileResult	- Get User's Profile result.
    /// \return	true if the token and secret was currected, false otherwise.
	AAA_API bool GetUserProfile(const GetUserProfileReq *req,GetUserProfileResult *result);
    /// \brief Query Game Points
	///
    /// \param QueryGamePointsReq	- Query points request.
    /// \param QueryGamePointsResult	- Query points result.
    /// \return	true if the query was successed, false otherwise.
	AAA_API bool QueryGamePoints(const QueryGamePointsReq *req,QueryGamePointsResult *result);
    /// \brief Deduct Game Points
	///
    /// \param DeductGamePointsReq	- Deduct points request.
    /// \param DeductGamePointsResult	- Deduct points result.
    /// \return	true if the deduction was successed, false otherwise.
	AAA_API bool DeductGamePoints(const DeductGamePointsReq *req,DeductGamePointsResult *result);
    /// \brief Cancel Game Points Deduction
	///
    /// \param CancelGamePointsDeductionReq	- Cancel game points deduction request.
    /// \param CancelGamePointsDeductionResult	- Cancel game points deduction result.
    /// \return	true if the deduction was canceled, false otherwise.
	AAA_API bool CancelGamePointsDeduction(const CancelGamePointsDeductionReq *req,CancelGamePointsDeductionResult *result);
    /// \brief Query Bonus Points
	///
    /// \param QueryBonusPointsReq	- Query points request.
    /// \param QueryBonusPointsResult	- Query points result.
    /// \return	true if the query was successed, false otherwise.
	AAA_API bool QueryBonusPoints(const QueryBonusPointsReq *req,QueryBonusPointsResult *result);
    /// \brief Deduct Bonus Points
	///
    /// \param DeductBonusPointsReq	- Deduct bonus points request.
    /// \param DeductBonusPointsResult	- Deduct bonus points result.
    /// \return	true if the deduction was successed, false otherwise.
	AAA_API bool DeductBonusPoints(const DeductBonusPointsReq *req,DeductBonusPointsResult *result);
    /// \brief Cancel Bonus Points Deduction
	///
    /// \param CancelBonusPointsDeductionReq	- Cancel bonus points deduction request.
    /// \param CancelBonusPointsDeductionResult	- Cancel bonus points deduction result.
    /// \return	true if the deduction was canceled, false otherwise.
	AAA_API bool CancelBonusPointsDeduction(const CancelBonusPointsDeductionReq *req,CancelBonusPointsDeductionResult *result);
    /// \brief Deduct Bonus Points
	///
    /// \param DepositBonusPointsReq	- Deposit bonus points request.
    /// \param DepositBonusPointsResult	- Deposit bonus points result.
    /// \return	true if the deposit was successed, false otherwise.
	AAA_API bool DepositBonusPoints(const DepositBonusPointsReq *req,DepositBonusPointsResult *result);
    /// \brief Cancel Bonus Points Deduction
	///
    /// \param CancelBonusPointsDepositReq	- Cancel bonus points deposit request.
    /// \param CancelBonusPointsDepositResult	- Cancel bonus points deposit result.
    /// \return	true if the deposit was canceled, false otherwise.
	AAA_API bool CancelBonusPointsDeposit(const CancelBonusPointsDepositReq *req,CancelBonusPointsDepositResult *result);
    /// \brief Release the Funtown AAA module.
    ///
	AAA_API void FTAAARelease();
}


#endif


